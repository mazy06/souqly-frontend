const fetch = require('node-fetch');

const API_BASE_URL = 'http://localhost:8080/api';

async function testFormAPI() {
  console.log('üß™ Test de l\'API des formulaires dynamiques\n');

  try {
    // Test 1: R√©cup√©rer tous les formulaires
    console.log('üìã Test 1: R√©cup√©ration de tous les formulaires...');
    const formsResponse = await fetch(`${API_BASE_URL}/admin/forms`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer test-token', // Remplacez par un vrai token
      },
    });

    if (formsResponse.ok) {
      const forms = await formsResponse.json();
      console.log(`‚úÖ ${forms.length} formulaires trouv√©s`);
      
      if (forms.length > 0) {
        const firstForm = forms[0];
        console.log(`üìù Premier formulaire: ID=${firstForm.id}, Nom="${firstForm.name}"`);
        
        // Test 2: R√©cup√©rer le premier formulaire par ID
        console.log('\nüìã Test 2: R√©cup√©ration du formulaire par ID...');
        const formResponse = await fetch(`${API_BASE_URL}/admin/forms/${firstForm.id}`, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': 'Bearer test-token',
          },
        });

        if (formResponse.ok) {
          const form = await formResponse.json();
          console.log(`‚úÖ Formulaire trouv√©: "${form.name}"`);
          console.log(`üìä Nombre de champs: ${form.fields ? form.fields.length : 0}`);
        } else {
          console.log(`‚ùå Erreur ${formResponse.status}: ${formResponse.statusText}`);
        }
      } else {
        console.log('‚ö†Ô∏è Aucun formulaire trouv√© - cr√©ons-en un pour tester');
        
        // Test 3: Cr√©er un formulaire de test
        console.log('\nüìã Test 3: Cr√©ation d\'un formulaire de test...');
        const createResponse = await fetch(`${API_BASE_URL}/admin/forms`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': 'Bearer test-token',
          },
          body: JSON.stringify({
            name: 'Formulaire Test',
            description: 'Formulaire de test pour v√©rification',
            categoryId: 1,
            isActive: true
          }),
        });

        if (createResponse.ok) {
          const newForm = await createResponse.json();
          console.log(`‚úÖ Formulaire cr√©√©: ID=${newForm.id}, Nom="${newForm.name}"`);
        } else {
          console.log(`‚ùå Erreur ${createResponse.status}: ${createResponse.statusText}`);
        }
      }
    } else {
      console.log(`‚ùå Erreur ${formsResponse.status}: ${formsResponse.statusText}`);
    }

  } catch (error) {
    console.log('‚ùå Erreur de connexion:', error.message);
    console.log('üí° V√©rifiez que le backend est d√©marr√© sur http://localhost:8080');
  }

  console.log('\n‚úÖ Test termin√©');
}

testFormAPI(); 