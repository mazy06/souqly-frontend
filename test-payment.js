const ApiService = require('./services/ApiService').default;

// Test du syst√®me de paiement
async function testPaymentSystem() {
  console.log('üß™ Test du syst√®me de paiement...\n');

  try {
    // Test 1: R√©cup√©ration des m√©thodes de paiement
    console.log('1Ô∏è‚É£ Test r√©cup√©ration m√©thodes de paiement...');
    const methods = await ApiService.get('/api/payments/methods');
    console.log('‚úÖ M√©thodes de paiement:', methods);
    console.log('');

    // Test 2: V√©rification du solde du portefeuille
    console.log('2Ô∏è‚É£ Test v√©rification solde portefeuille...');
    const balance = await ApiService.get('/api/payments/wallet/balance');
    console.log('‚úÖ Solde du portefeuille:', balance);
    console.log('');

    // Test 3: Simulation d'un achat
    console.log('3Ô∏è‚É£ Test simulation achat...');
    const purchaseRequest = {
      productId: 1,
      paymentMethodId: 'wallet-1',
      amount: 150.00
    };
    
    const purchaseResult = await ApiService.post('/api/payments/purchase', purchaseRequest);
    console.log('‚úÖ R√©sultat de l\'achat:', purchaseResult);
    console.log('');

    // Test 4: Historique des transactions
    console.log('4Ô∏è‚É£ Test historique transactions...');
    const transactions = await ApiService.get('/api/payments/transactions');
    console.log('‚úÖ Historique des transactions:', transactions);
    console.log('');

    console.log('üéâ Tous les tests de paiement sont pass√©s avec succ√®s !');

  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error.message);
  }
}

// Ex√©cuter les tests
testPaymentSystem(); 